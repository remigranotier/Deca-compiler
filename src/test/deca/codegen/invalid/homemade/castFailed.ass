; ADDSP : method table size : 9, nb of var 2
	ADDSP #11
; start main program
; Generation of the method table of Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD Code.Object.equals, R0
	STORE R0, 2(GB)
; Generation of the method table of : A
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD Code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD Code.A.val, R0
	STORE R0, 5(GB)
; Generation of the method table of : B
	LEA 3(GB), R0
	STORE R0, 6(GB)
	LOAD Code.Object.equals, R0
	STORE R0, 7(GB)
	LOAD Code.B.val, R0
	STORE R0, 8(GB)
	LOAD Code.B.valY, R0
	STORE R0, 9(GB)
; Main program
; Global variables initialization
	NEW #3, R2
	BOV heapFull
	LEA 6(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.B
	POP R2
	STORE R2, 10(GB)
	NEW #2, R2
	BOV heapFull
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 11(GB)
; Beginning of main instructions:
; Start of an instanceof
	LOAD 10(GB), R2
	PUSH R2
	LEA 6(GB), R0
ControlFlowBlock0:
	LOAD 0(R2), R2
	CMP R0, R2
	BEQ CastSuccess0
	CMP #null, R2
	BNE ControlFlowBlock0
; End of an instanceof
	WSTR "ERROR : cannot cast A type object to B"
	WNL
	ERROR
CastSuccess0:
	POP R2
; Expression of type A casted to type B
; Beginning of a method call : method at index 2 ; with 0 params.
	ADDSP #1
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #1
	LOAD R0, R1
	WINT
	WNL
; Start of an instanceof
	LOAD 11(GB), R2
	PUSH R2
	LEA 6(GB), R0
ControlFlowBlock1:
	LOAD 0(R2), R2
	CMP R0, R2
	BEQ CastSuccess1
	CMP #null, R2
	BNE ControlFlowBlock1
; End of an instanceof
	WSTR "ERROR : cannot cast A type object to B"
	WNL
	ERROR
CastSuccess1:
	POP R2
; Expression of type A casted to type B
; Beginning of a method call : method at index 2 ; with 0 params.
	ADDSP #1
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #1
	LOAD R0, R1
	WINT
	WNL
	HALT
init.object:
	RTS
init.A:
; save registers
; initialization of own fields
; Initialization of field x
	LOAD -2(LB), R1
	LOAD #1, R0
	STORE R0, 1(R1)
; restore registers
	RTS
init.B:
; save registers
	LOAD -2(LB), R1
	LOAD #0, R0
	STORE R0, 1(R1)
	LOAD #0, R0
	STORE R0, 2(R1)
; Call for initialization of inherited fields
	PUSH R1
	BSR init.A
	SUBSP #1	; We get the stack back to its initial state
; finished dealing with inheritance
; initialization of own fields
; Initialization of field x
	LOAD -2(LB), R1
	LOAD #2, R0
	STORE R0, 1(R1)
; Initialization of field y
	LOAD -2(LB), R1
	LOAD #1, R0
	STORE R0, 2(R1)
; restore registers
	RTS
Code.Object.equals:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
code.A.val:
; save registers
	PUSH R2
	LOAD -2(LB), R2
	LOAD 1(R2), R2
	LOAD R2, R0
	BRA fin.A.val
	WSTR "ERROR : exited method A.val with non-void return type without a return instruction."
	WNL
	ERROR
fin.A.val:
; restore registers
	POP R2
	RTS
code.B.val:
; save registers
	PUSH R2
	LOAD -2(LB), R2
	LOAD 1(R2), R2
	LOAD R2, R0
	BRA fin.B.val
	WSTR "ERROR : exited method B.val with non-void return type without a return instruction."
	WNL
	ERROR
fin.B.val:
; restore registers
	POP R2
	RTS
code.B.valY:
; save registers
	PUSH R2
	LOAD -2(LB), R2
	LOAD 2(R2), R2
	LOAD R2, R0
	BRA fin.B.valY
	WSTR "ERROR : exited method B.valY with non-void return type without a return instruction."
	WNL
	ERROR
fin.B.valY:
; restore registers
	POP R2
	RTS
heapFull:
	WSTR "ERROR : allocation failed because of full heap"
	WNL
	ERROR
; end main program
