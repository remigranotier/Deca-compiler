; ADDSP : method table size : 2, nb of var 3
	ADDSP #5
; start main program
; Generation of the method table of Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD Code.Object.equals, R0
	STORE R0, 2(GB)
; Main program
; Global variables initialization
	LOAD #3, R2
	MUL #2, R2
	QUO #1, R2
	BOV divisionByZero
	STORE R2, 3(GB)
	LOAD #0x1.19999ap1, R2
	LOAD 3(GB), R3
	FLOAT R3, R3
	MUL R3, R2
	STORE R2, 4(GB)
	LOAD #1, R2
	STORE R2, 5(GB)
; Beginning of main instructions:
; Beginning of a new while loop
	BRA WhileCondition0
WhileBeginning0:
; Beginning of a new If statement
; Beginning of a 'and' Control Flow : b = true E = Else0
; Beginning of the left op control flow
	LOAD 5(GB), R0
	CMP #0, R0
	BNE EndOfBoolExpr0
; Beginning of the right op control flow
; Beginning of a 'and' Control Flow : b = false E = Else0
; Beginning of the left op control flow
; Beginning of a Boolean Literal control flow : value : true ; b = false
; End of a Boolean Literal control flow
; Beginning of the right op control flow
	LOAD 5(GB), R0
	CMP #0, R0
	BEQ Else0
; End of a 'and' Control Flow : b = false E = Else0
EndOfBoolExpr0:
; End of a 'and' Control Flow : b = true E = Else0
	LOAD 3(GB), R2
	FLOAT R2, R2
	ADD #0x1.4p1, R2
	STORE R2, 4(GB)
	BRA EndIf0
Else0:
	WSTR "ERROR"
EndIf0:
	WSTR "OK "
	LOAD 4(GB), R1
	WFLOAT
	WNL
	LOAD #0, R2
	STORE R2, 5(GB)
WhileCondition0:
	LOAD 5(GB), R0
	CMP #0, R0
	BNE WhileBeginning0
; End of a while loop
	LOAD 3(GB), R2
	LOAD 3(GB), R3
	MUL R3, R2
	STORE R2, 3(GB)
	LOAD 3(GB), R1
	WINT
	WNL
	HALT
init.object:
	RTS
Code.Object.equals:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
divisionByZero:
	WSTR "ERROR : Can't divide by 0 !"
	WNL
	ERROR
; end main program
