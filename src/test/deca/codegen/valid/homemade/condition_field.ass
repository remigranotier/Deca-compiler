; ADDSP : method table size : 4, nb of var 1
	ADDSP #5
; start main program
; Generation of the method table of Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD Code.Object.equals, R0
	STORE R0, 2(GB)
; Generation of the method table of : A
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD Code.Object.equals, R0
	STORE R0, 4(GB)
; Main program
; Global variables initialization
	NEW #3, R2
	BOV heapFull
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 5(GB)
; Beginning of main instructions:
; Beginning of a new If statement
	LOAD 5(GB), R2
	LOAD 1(R2), R2
	CMP #0, R2
	BNE Else0
	WSTR "coucou"
	BRA EndIf0
Else0:
	WSTR "aled"
EndIf0:
; Beginning of a new If statement
	LOAD 5(GB), R2
	LOAD 2(R2), R2
	CMP #0, R2
	BNE Else1
	WSTR "yay"
	BRA EndIf1
Else1:
	WSTR "ayay"
	WNL
EndIf1:
	HALT
init.object:
	RTS
init.A:
; save registers
; initialization of own fields
; Initialization of field x
	LOAD -2(LB), R1
	LOAD #0, R0
	STORE R0, 1(R1)
; Initialization of field y
	LOAD -2(LB), R1
	LOAD #0, R0
	STORE R0, 2(R1)
; restore registers
	RTS
Code.Object.equals:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
heapFull:
	WSTR "ERROR : allocation failed because of full heap"
	WNL
	ERROR
; end main program
