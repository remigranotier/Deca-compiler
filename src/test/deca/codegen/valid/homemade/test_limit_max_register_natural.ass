; ADDSP : method table size : 2, nb of var 0
	ADDSP #2
; start main program
; Generation of the method table of Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD Code.Object.equals, R0
	STORE R0, 2(GB)
; Main program
; Global variables initialization
; Beginning of main instructions:
	LOAD #1, R2
	LOAD #1, R3
	LOAD #1, R4
	LOAD #1, R5
	LOAD #1, R6
	LOAD #1, R7
	LOAD #1, R8
	LOAD #1, R9
	LOAD #1, R10
	LOAD #1, R11
	LOAD #1, R12
	LOAD #1, R13
	LOAD #1, R14
	LOAD #1, R15
	PUSH R15
	LOAD #1, R15
	MUL #1, R15
	LOAD R15, R0
	POP R15
	MUL R0, R15
	MUL R15, R14
	MUL R14, R13
	MUL R13, R12
	MUL R12, R11
	MUL R11, R10
	MUL R10, R9
	MUL R9, R8
	MUL R8, R7
	MUL R7, R6
	MUL R6, R5
	MUL R5, R4
	MUL R4, R3
	MUL R3, R2
	LOAD R2, R1
; On ecrit ce qui se trouve dans R1 (le resultat)
	WINT
	WNL
	HALT
init.object:
	RTS
Code.Object.equals:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
; end main program
