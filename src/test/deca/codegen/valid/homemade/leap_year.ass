; ADDSP : method table size : 2, nb of var 2
	ADDSP #4
; start main program
; Generation of the method table of Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD Code.Object.equals, R0
	STORE R0, 2(GB)
; Main program
; Global variables initialization
	LOAD #1900, R2
	STORE R2, 3(GB)
	LOAD #0, R2
	STORE R2, 4(GB)
; Beginning of main instructions:
; Beginning of a new If statement
; Beginning of a comparison in a control flow
	LOAD 3(GB), R2
	REM #4, R2
	BOV moduloByZero
	CMP #0, R2
	BNE Else0
; Beginning of a new If statement
; Beginning of a comparison in a control flow
	LOAD 3(GB), R2
	REM #100, R2
	BOV moduloByZero
	CMP #0, R2
	BNE Else1
; Beginning of a new If statement
; Beginning of a comparison in a control flow
	LOAD 3(GB), R2
	REM #400, R2
	BOV moduloByZero
	CMP #0, R2
	BNE Else2
	LOAD #1, R2
	STORE R2, 4(GB)
	BRA EndIf2
Else2:
	LOAD #0, R2
	STORE R2, 4(GB)
EndIf2:
	BRA EndIf1
Else1:
	LOAD #1, R2
	STORE R2, 4(GB)
EndIf1:
	BRA EndIf0
Else0:
	LOAD #0, R2
	STORE R2, 4(GB)
EndIf0:
; Beginning of a new If statement
	LOAD 4(GB), R0
	CMP #0, R0
	BEQ Else3
	LOAD 3(GB), R1
	WINT
	WNL
	WSTR " is a leap year."
	WNL
	BRA EndIf3
Else3:
	LOAD 3(GB), R1
	WINT
	WNL
	WSTR " is not a leap year."
	WNL
EndIf3:
	HALT
init.object:
	RTS
Code.Object.equals:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
moduloByZero:
	WSTR "ERROR : Can't do a modulo by 0 !"
	WNL
	ERROR
; end main program
